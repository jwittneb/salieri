<

-- equipment slot numbers: 0 - Weapon
--                         1 - Cloak
--                         3 - Gloves
--                         5 - Shield
--                         6 - Armor

weaponTable = {}

weaponTable["Hand Axe"] = 1
weaponTable[1] = "war axe"
weaponTable[10] = "+0 club"
weaponTable[3] = "dagger"
weaponTable["Club"] = 10

armorTable = {}

armorTable["Ring Mail"] = 10

-- returns a string to equip the best item in each slot
-- sometimes no action happens, so we have to check
-- TODO: make this so that it isnt just for MiBe, eventually
function equip_best()
  local action = 0
  for ind, itm in pairs(items.inventory()) do
    if (itm.equip_type == 0) then
      if (itm.damage > items.equipped_at(0).damage and itm.weap_skill == "Axes") then
        itm.wield()
        action = 1
      elseif (not itm.equipped) then
        itm.drop()
        action = 1
      end
    elseif (itm.equip_type == 1) then
      if (items.equipped_at(1) == nil) then
        itm.wear()
        action = 1
      elseif (not itm.equipped) then
        itm.drop()
        action = 1
      end
    elseif (itm.equip_type == 2) then
      if (itm.ac > items.equipped_at(2).ac) then
        itm.wear()
        action = 1
      elseif (not itm.equipped) then
        itm.drop()
        action = 1
      end
    elseif (itm.equip_type == 3) then
      if (items.equipped_at(3) == nil) then
        itm.wear()
        action = 1
      elseif (not itm.equipped) then
        itm.drop()
        action = 1
      end
    elseif (itm.equip_type == 6) then
      if (itm.ac > items.equipped_at(6).ac) then
        itm.wear()
        action = 1
      elseif (not itm.equipped) then
        itm.drop()
        action = 1
      end
    elseif (itm.equip_type == 7) then
      if (items.equipped_at(7) == nil) then
        crawl.mpr(itm.equip_type)
        debug_mode = 1
        itm.wear()
        action = 1
      end
    end
  end
  if (action == 0) then
    -- TODO: no inventory management was necessary, this is a simple hack to continue the script
    autotravel()
  end
--  crawl.mpr(items.equipped_at(0).name())
--  for ind, itm in items.inventory() do 
--  crawl.mpr(items.inventory()[2].equip_type)
end


-- Returns a list of all the items on the floor, with entries (xpos, ypos, item)
-- This function is a little defunct if we autopickup all weapons/armor and then evaluate
function detect_items()
  local flooritems = {}
  local counter = 1
  
  for x = 1, 15 do 
    for y = 1, 15 do
      local curPos = items.get_items_at(x-8,y-8)
      if (curPos ~= nil) then
        for i, v in pairs(curPos) do
          temp = {}
          table.insert(temp, 1, x-8)
          table.insert(temp, 2, y-8)
          table.insert(temp, 3, v)
          table.insert(flooritems, counter, temp)
--          crawl.mpr(temp[3].name())
--          crawl.mpr(tostring(temp[1]))
--          crawl.mpr(tostring(temp[2]))
          counter = counter + 1
        end
      end
    end
  end

  if flooritems[1] then
    return flooritems
  else
    return nil
  end
end

-- This is pretty stupid right now, mostly for testing purposes
function find_best_item(items)
  if items then
    for ind, val in pairs(items) do
      if val[3].subtype() then
        if view.can_reach(val[1], val[2]) then
          crawl.mpr(val[3].subtype())
        end
      else
        crawl.mpr("REEEEEEE")
        crawl.mpr(val[3].name())
      end
    end
  end
end


>
